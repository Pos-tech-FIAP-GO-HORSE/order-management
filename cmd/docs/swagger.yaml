definitions:
  create_order.Input:
    properties:
      items:
        items:
          $ref: '#/definitions/create_order.Item'
        type: array
      userId:
        type: string
    type: object
  create_order.Item:
    properties:
      comments:
        type: string
      id:
        type: string
    type: object
  create_product.Input:
    properties:
      category:
        type: string
      description:
        type: string
      imageUrl:
        type: string
      isAvailable:
        type: boolean
      name:
        type: string
      preparationTime:
        type: integer
      price:
        type: number
    type: object
  create_user.Input:
    properties:
      cpf:
        type: string
      email:
        type: string
      fullName:
        type: string
    type: object
  find_all_orders.Item:
    properties:
      comments:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  find_all_orders.Order:
    properties:
      createdAt:
        type: string
      estimatedPreparationTime:
        type: integer
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/find_all_orders.Item'
        type: array
      status:
        type: string
      totalPrice:
        type: number
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  find_all_products.Product:
    properties:
      category:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      isAvailable:
        type: boolean
      name:
        type: string
      preparationTime:
        type: integer
      price:
        type: number
      updatedAt:
        type: string
    type: object
  find_user_by_cpf.User:
    properties:
      cpf:
        type: string
      createdAt:
        type: string
      email:
        type: string
      fullName:
        type: string
      id:
        type: string
      updatedAt:
        type: string
    type: object
  handlers.ResponseMessage:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  update_order.Input:
    properties:
      estimatedPreparationTime:
        type: integer
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/update_order.Item'
        type: array
      status:
        type: string
      totalPrice:
        type: number
      userId:
        type: string
    type: object
  update_order.Item:
    properties:
      comments:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  update_product.Input:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      name:
        type: string
      preparationTime:
        type: integer
      price:
        type: number
    type: object
  update_product_availability.Input:
    properties:
      id:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/orders:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all orders in the system
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/find_all_orders.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Get all orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Add a new order to the system
      parameters:
      - description: Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/create_order.Input'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Create a new order
      tags:
      - Orders
  /api/v1/orders/{id}:
    patch:
      consumes:
      - application/json
      description: Update the details of an existing order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/update_order.Input'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Update an existing order
      tags:
      - Orders
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all products in the inventory
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/find_all_products.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Get all products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Add a new product to the inventory
      parameters:
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/create_product.Input'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Create new Product
      tags:
      - Products
  /api/v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by its unique ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Delete a product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Retrieve a product by its unique ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/find_all_products.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Get product by ID
      tags:
      - Products
    patch:
      consumes:
      - application/json
      description: Update the details of an existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/update_product.Input'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Update product details
      tags:
      - Products
  /api/v1/products/{id}/availability:
    patch:
      consumes:
      - application/json
      description: Update the availability status of an existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Availability Data
        in: body
        name: availability
        required: true
        schema:
          $ref: '#/definitions/update_product_availability.Input'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Update product availability
      tags:
      - Products
  /api/v1/products/category/{category}:
    get:
      consumes:
      - application/json
      description: Retrieve products by a specific category
      parameters:
      - description: Product Category
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/find_all_products.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Get products by category
      tags:
      - Products
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Add a new user to the system
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/create_user.Input'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Create a new user
      tags:
      - Users
  /api/v1/users/{cpf}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by their CPF
      parameters:
      - description: CPF
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/find_user_by_cpf.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ResponseMessage'
      summary: Find user by CPF
      tags:
      - Users
swagger: "2.0"
